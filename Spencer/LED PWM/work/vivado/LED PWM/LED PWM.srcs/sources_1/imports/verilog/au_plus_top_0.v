/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_plus_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [2:0] io_led,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_r_pulse;
  reg [8-1:0] M_r_value;
  reg [1-1:0] M_r_update;
  pwm_2 r (
    .clk(clk),
    .rst(rst),
    .value(M_r_value),
    .update(M_r_update),
    .pulse(M_r_pulse)
  );
  wire [1-1:0] M_g_pulse;
  reg [8-1:0] M_g_value;
  reg [1-1:0] M_g_update;
  pwm_2 g (
    .clk(clk),
    .rst(rst),
    .value(M_g_value),
    .update(M_g_update),
    .pulse(M_g_pulse)
  );
  wire [1-1:0] M_b_pulse;
  reg [8-1:0] M_b_value;
  reg [1-1:0] M_b_update;
  pwm_2 b (
    .clk(clk),
    .rst(rst),
    .value(M_b_value),
    .update(M_b_update),
    .pulse(M_b_pulse)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    usb_tx = usb_rx;
    io_led = {~M_r_pulse, ~M_g_pulse, ~M_b_pulse};
    M_r_update = 1'h1;
    M_g_update = 1'h1;
    M_b_update = 1'h1;
    M_r_value = 8'h80;
    M_g_value = 8'hff;
    M_b_value = 8'h80;
  end
endmodule
